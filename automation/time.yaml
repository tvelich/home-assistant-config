- alias: time_sunset
  trigger:
    platform: sun
    event: sunset
    offset: '00:15:00'
  action:
    service: script.outside_core_lights_on

- alias: time_sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '-00:15:00'
  action:
    service: script.outside_lights_off

- alias: time_11pm
  trigger:
    platform: time
    at: '23:00:00'
  action:
    service: script.fade_to_dim_front_yard

- alias: time_irrigation_maintenance_frontyard
  trigger:
    platform: sun
    event: sunrise
    offset: '-01:00:00'
  condition:
    - condition: state
      entity_id: input_select.irrigation_front_yard
      state: Maintenance
    - condition: or
      conditions:
        - condition: time
          weekday:
            - sun
            - wed
        - condition: and
          conditions:
            - condition: time
              weekday:
                - fri
            - condition: state
              entity_id: binary_sensor.excessive_heat_today
              state: 'on'
  action:
    - service: python_script.irrigation_run_maintenance
      data:
        zones:
          - 1
          - 2
          - 6

- alias: time_irrigation_maintenance_backyard
  trigger:
    platform: sun
    event: sunrise
    offset: '-01:00:00'
  condition:
    - condition: time
      weekday:
        - mon
        - thu
    - condition: state
      entity_id: input_select.irrigation_backyard
      state: Maintenance
  action:
    - service: python_script.irrigation_run_maintenance
      data:
        zones:
          - 3
          - 4
          - 5

- alias: time_irrigation_new_seed_phase_1_front_yard
  trigger:
    - platform: time
      at: '08:00:00'
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '12:00:00'
    - platform: time
      at: '13:30:00'
    - platform: time
      at: '15:00:00'
    - platform: time
      at: '16:30:00'
    - platform: time
      at: '18:00:00'
  condition:
    - condition: state
      entity_id: input_select.irrigation_front_yard
      state: New Seed (Phase 1)
    - condition: numeric_state
      entity_id: sensor.netatmo_home_indoor_rain_rain
      below: .1
  action:
    - service: script.post_slack_message
      data:
        message: Started front yard watering for new seed
    - service: script.queue_sprinkler_zone
      data:
        zone: 1
        minutes: 8
    - service: script.queue_sprinkler_zone
      data:
        zone: 2
        minutes: 8
    - service: script.queue_sprinkler_zone
      data:
        zone: 6
        minutes: 8

- alias: time_irrigation_new_seed_phase_1_backyard
  trigger:
    - platform: time
      at: '08:00:00'
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '12:00:00'
    - platform: time
      at: '13:30:00'
    - platform: time
      at: '15:00:00'
    - platform: time
      at: '16:30:00'
    - platform: time
      at: '18:00:00'
  condition:
    - condition: state
      entity_id: input_select.irrigation_backyard
      state: New Seed (Phase 1)
    - condition: numeric_state
      entity_id: sensor.netatmo_home_indoor_rain_rain
      below: .1
  action:
    - service: script.post_slack_message
      data:
        message: Started backyard watering for new seed
    - service: script.queue_sprinkler_zone
      data:
        zone: 3
        minutes: 8
    - service: script.queue_sprinkler_zone
      data:
        zone: 4
        minutes: 8
    - service: script.queue_sprinkler_zone
      data:
        zone: 5
        minutes: 8

- alias: time_irrigation_new_seed_phase_2_front_yard
  trigger:
    - platform: sun
      event: sunrise
  condition:
    - condition: state
      entity_id: input_select.irrigation_front_yard
      state: New Seed (Phase 2)
    - condition: numeric_state
      entity_id: sensor.netatmo_home_indoor_rain_rain
      below: .1
    - condition: numeric_state
      entity_id: sensor.netatmo_home_indoor_rain_rain_today
      below: 1
  action:
    - service: script.post_slack_message
      data:
        message: Started front yard watering for new seed
    - service: script.queue_sprinkler_zone
      data:
        zone: 1
        minutes: 15
    - service: script.queue_sprinkler_zone
      data:
        zone: 2
        minutes: 15
    - service: script.queue_sprinkler_zone
      data:
        zone: 6
        minutes: 15

- alias: time_irrigation_new_seed_phase_2_backyard
  trigger:
    - platform: sun
      event: sunrise
  condition:
    - condition: state
      entity_id: input_select.irrigation_backyard
      state: New Seed (Phase 2)
    - condition: numeric_state
      entity_id: sensor.netatmo_home_indoor_rain_rain
      below: .1
    - condition: numeric_state
      entity_id: sensor.netatmo_home_indoor_rain_rain_today
      below: 1
  action:
    - service: script.post_slack_message
      data:
        message: Started backyard watering for new seed
    - service: script.queue_sprinkler_zone
      data:
        zone: 3
        minutes: 15
    - service: script.queue_sprinkler_zone
      data:
        zone: 4
        minutes: 15
    - service: script.queue_sprinkler_zone
      data:
        zone: 5
        minutes: 15

- alias: time_irrigation_maintenance_syringe_front_yard
  trigger:
    platform: time
    at: '14:30:00'
  condition:
    - condition: state
      entity_id: input_select.irrigation_front_yard
      state: Maintenance
    - condition: state
      entity_id: binary_sensor.excessive_heat_today
      state: 'on'
  action:
    - service: script.post_slack_message
      data:
        message: Started watering to cool off front yard due to excessive heat
    - service: script.queue_sprinkler_zone
      data:
        zone: 1
        minutes: 6
    - service: script.queue_sprinkler_zone
      data:
        zone: 2
        minutes: 6
    - service: script.queue_sprinkler_zone
      data:
        zone: 6
        minutes: 6

- alias: time_fireplace_check
  trigger:
    - platform: time_pattern
      minutes: "/1"
  condition:
    condition: state
    entity_id: input_boolean.fireplace_enabled
    state: 'on'
  action:
    - service: python_script.handle_fireplace

- alias: time_water_leak_check
  trigger:
    - platform: time_pattern
      seconds: '/15'
    - entity_id: binary_sensor.downstairs_bathroom_water_detected
      platform: state
      to: 'on'
    - entity_id: binary_sensor.upstairs_bathroom_water_detected
      platform: state
      to: 'on'
    - entity_id: binary_sensor.main_valve_water_detected
      platform: state
      to: 'on'
    - entity_id: binary_sensor.garage_sink_water_detected
      platform: state
      to: 'on'
    - entity_id: binary_sensor.laundry_room_water_detected
      platform: state
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: 'binary_sensor.downstairs_bathroom_water_detected'
        state: 'on'
      - condition: state
        entity_id: 'binary_sensor.upstairs_bathroom_water_detected'
        state: 'on'
      - condition: state
        entity_id: 'binary_sensor.main_valve_water_detected'
        state: 'on'
      - condition: state
        entity_id: 'binary_sensor.garage_sink_water_detected'
        state: 'on'
      - condition: state
        entity_id: 'binary_sensor.laundry_room_water_detected'
        state: 'on'
  action:
    service: script.post_slack_message
    data_template:
      message: >
        {% if states('binary_sensor.downstairs_bathroom_water_detected') == 'on' %}
          Water detected in downstairs bathroom!
        {% elif states('binary_sensor.upstairs_bathroom_water_detected') == 'on' %}
          Water detected in upstairs bathroom!
        {% elif states('binary_sensor.main_valve_water_detected') == 'on' %}
          Water detected at main valve!
        {% elif states('binary_sensor.garage_sink_water_detected') == 'on' %}
          Water detected at garage sink!
        {% elif states('binary_sensor.laundry_room_water_detected') == 'on' %}
          Water detected in laundry room!
        {% else %}
          Water detected!
        {% endif %}

- alias: time_sleep_sounds_check
  trigger:
    platform: time_pattern
    minutes: 55
  condition:
    condition: state
    entity_id: sensor.sleep_mode
    state:
      - 'on'
      - 'partial'
  action:
    service: script.play_sleep_sounds
